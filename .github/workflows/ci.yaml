name: continuous integration
on:
  push:
    branches:
      - '**'
      - '!release'

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:

  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-maven/setup@v7
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,github-packages=https://maven.pkg.github.com/navikt/maven-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: navikt/bidrag-maven/verify-dependencies@v7
      - run: mvn install -B -e
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker image build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker image push ${IMAGE}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy docker image to dev
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          path: deploy
      - name: Deploy main to dev-fss
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/main.yaml
      - name: Deploy feature to dev-fss
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/feature.yaml

  run_cucumber:
    runs-on: self-hosted
    name: Run cucumber integration tests
    needs: deploy

    env:
      INGRESS_OPPGAVE: https://oppgave-q2.nais.preprod.local
      INGRESS_ARKIV: https://bidrag-dokument-arkiv.dev.adeo.no
      INGRESS_CUCUMBER: https://bidrag-cucumber-onprem.dev.adeo.no
      INGRESS_DOKARKIV: https://dokarkiv-q2.dev.adeo.no

    steps:
      - run: |
          echo "INGRESS_OPPGAVE=https://oppgave.nais.preprod.local" >> $GITHUB_ENV
          echo "INGRESS_ARKIV=https://bidrag-dokument-arkiv-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-onprem-feature.dev.adeo.no" >> $GITHUB_ENV
          echo "INGRESS_DOKARKIV=https://dokarkiv-q1.dev.adeo.no" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/main'
      - name: "@arkiv-swagger"
        run: |
          curl -X 'POST' '${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-onprem/run' -i \
            -H 'accept: */*' \
            -H 'Content-Type: application/json' \
            -d '{
              "tags":["@arkiv-swagger"],
              "ingressesForApps":["${{ env.INGRESS_ARKIV }}@bidrag-dokument-arkiv"]
            }' | tee .cucumber-result
          cat .cucumber-result | grep HTTP/1.1 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)
      - name: "@bidrag-dokument-arkiv"
        run: |
          curl -X 'POST' '${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-onprem/run' -i \
            -H 'accept: */*' \
            -H 'Content-Type: application/json' \
            -d '{
              "tags":["@bidrag-dokument-arkiv"], "navUsername": "c151787", "testUsername": "z992903",
              "noContextPathForApps":["dokarkiv-api", "oppgave-api"],
              "ingressesForApps":[
                  "${{ env.INGRESS_ARKIV }}@bidrag-dokument-arkiv", 
                  "${{ env.INGRESS_OPPGAVE }}@oppgave-api",
                  "${{ env.INGRESS_DOKARKIV }}@dokarkiv-api"]
            }' | tee .cucumber-result
          cat .cucumber-result | grep HTTP/1.1 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)
      - name: "@arkiv-saf"
        run: |
          curl -X 'POST' '${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-onprem/run' -i \
            -H 'accept: */*' \
            -H 'Content-Type: application/json' \
            -d '{
              "tags":["@arkiv-saf"], "navUsername": "c151787", "testUsername": "z992903",
              "noContextPathForApps":["dokarkiv-api"],"ingressesForApps":[
                "${{ env.INGRESS_ARKIV }}@bidrag-dokument-arkiv",
                "${{ env.INGRESS_DOKARKIV }}@dokarkiv-api"
              ]
            }' | tee .cucumber-result
          cat .cucumber-result | grep HTTP/1.1 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)

  remove_files_from_workspace:
    name: Remove files from workspace
    runs-on: self-hosted
    needs: run_cucumber

    if: ${{ always() }}

    steps:
      - name: Remove files from workspace
        run: |
          cd $RUNNER_WORKSPACE
          echo deleting files in $RUNNER_WORKSPACE
          sudo rm -rf *

  bump_dev_version:
    runs-on: ubuntu-latest
    name: Bump SNAPSHOT version
    if: github.ref == 'refs/heads/main'
    needs: run_cucumber

    steps:
      - uses: actions/checkout@v3
      - uses: navikt/bidrag-git/tag-snap@v1-tag-snap
