name: continuous integration
on:
  push:
    branches:
      - '**'

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/bidrag-dokument-arkiv:${{ github.sha }}

jobs:

  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '15'
      - run: env
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-maven/setup@v4
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,github-packages=https://maven.pkg.github.com/navikt/maven-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: navikt/bidrag-maven/verify-dependencies@v1
      - run: mvn install -B -e
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo podman build --tag ${IMAGE} .
          sudo podman login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          sudo podman push ${IMAGE}

  deploy_dev:
    runs-on: ubuntu-latest
    name: Deploy docker image to dev
    if: github.ref != 'refs/heads/release'
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - name: Deploy main to dev-fss
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/main.json
      - name: Deploy feature to dev-fss
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/feature.json

  run_cucumber:
    runs-on: self-hosted
    name: Run cucumber integration tests
    needs: deploy_dev
    steps:
      - uses: navikt/bidrag-integration/cucumber-clone@v5
        id: clone
      - uses: navikt/bidrag-integration/input-json@v5
        with:
          base_path: ${{ steps.clone.outputs.cucumber_path }}
          test_username: z992903
      - uses: navikt/bidrag-scripts/create-cucumber-shell@v1
        id: creator
        with:
          cucumber_tag: bidrag-dokument-arkiv
          user: j104364
      - run: ${{ steps.creator.outputs.created_shell }}
        env:
          USER_AUTHENTICATION: ${{ secrets.USER_AUTHENTICATION }}
          TEST_USER_AUTHENTICATION: ${{ secrets.TEST_USER_AUTHENTICATION }}
      - name: Remove files from workspace
        run: |
          cd $RUNNER_WORKSPACE
          sudo rm -rf *
        if: ${{ always() }}

  bump_dev_version:
    runs-on: ubuntu-latest
    name: Bump SNAPSHOT version
    if: github.ref == 'refs/heads/main'
    needs: run_cucumber

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn release:update-versions
      - run: |
          BUMPED_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=version::${BUMPED_VERSION}
        id: snapshot
      - uses: navikt/bidrag-git/commit@v3
        with:
          commit_message: "Bumped to new version: ${{ steps.snapshot.outputs.version }}"
          pattern: "pom.xml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_prod:
    runs-on: ubuntu-latest
    name: Deploy docker image to prod
    if: github.ref == 'refs/heads/release'
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: deploy/.nais/nais-p.yaml
          VAR: namespace=default

  tag_prod_deploy:
    runs-on: ubuntu-latest
    name: Tag latest deploy to prod
    needs: deploy_prod

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: |
          TAG_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
          echo ::set-output name=tag::${TAG_VERSION}
        id: release
      - uses: navikt/bidrag-git/tag@v3
        with:
          tag_message: Releasing version ${{ steps.release.outputs.tag }}
          tag: ${{ steps.release.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
