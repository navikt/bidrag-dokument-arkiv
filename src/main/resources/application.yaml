server:
  servlet:
    context-path: /bidrag-dokument-arkiv
management:
  endpoints:
    web:
      exposure:
        include: "prometheus,health"
springdoc:
  packages-to-scan: no.nav.bidrag.dokument.arkiv.controller

STS_ISSUER_URL: ${STS_ISSUER_URL:${ACCESS_TOKEN_URL}}
---

spring.config.activate.on-profile: live
http.proxy.parametername: prevent.isso.proxy.fss(hack)

---
spring.config.activate.on-profile: live

no.nav.security.jwt:
  sts:
    properties:
      url: ${ACCESS_TOKEN_URL}/rest/v1/sts/token
      username: srvbdarkiv
      password: ${SRV_BD_ARKIV_AUTH}
  client:
    registration:
      oppgave:
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${OPPGAVE_SCOPE:0}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_post
  issuer.isso:
      acceptedaudience: ${ACCEPTED_AUDIENCE}
      discoveryurl: ${ISSO_ISSUER_URL}/.well-known/openid-configuration
  issuer.sts:
      acceptedaudience: srvbisys
      discoveryurl: ${STS_ISSUER_URL}/rest/v1/sts/.well-known/openid-configuration
  issuer.aad:
      discovery_url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/v2.0/.well-known/openid-configuration
      accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}


spring.kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SSL
      specific.avro.reader: true
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY}
      basic.auth.credentials.source: USER_INFO
      basic.auth.user.info: ${KAFKA_SCHEMA_REGISTRY_USER}:${KAFKA_SCHEMA_REGISTRY_PASSWORD}
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
      enableAutoCommit: false
    listener:
      ackMode: RECORD

